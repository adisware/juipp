<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#= "using Org.Juipp.Core.Events.Arguments;" #>
<#= "using Org.Juipp.Core.Events.Handlers;" #>
<#= "using Org.Juipp.Core.Behaviors;" #>
<#= "using Org.Juipp.Core.Controllers;" #>
<#= "using WebApplication1._layouts.ViewModels;" #>

namespace <#= "WebApplication1._layouts.Behaviors" #> 
{
    public static partial class BehaviorReference 
    {
             <#
			    var behaviors = System.IO.Directory.GetFiles(Host.ResolvePath(@"..\Behaviors\"));
				if(behaviors != null && behaviors.Length > 0)
				foreach(var behavior in behaviors)
                {
                    var fileName = System.IO.Path.GetFileName(behavior);
                    var className =  fileName.Split('.')[0];
                    if(fileName.EndsWith("Behavior.cs") == false) continue;
             #>public const string <#= className #> = "<#= className #>";
             <#} #>

    }
	 <#
    if(behaviors != null && behaviors.Length > 0) 
    foreach(var b in behaviors)
    {
        var fileName = System.IO.Path.GetFileName(b);
        var className =  fileName.Split('.')[0];
        if(fileName.EndsWith("Behavior.cs") == false) continue;#>
    public partial class <#= className #> : BehaviorBase{} 
    <#}#>


  
    public partial class BehaviorBase 
	{
		public IBehaviorContext BehaviorContext { get; set; }
    }


	<# 
	var viewModels = System.IO.Directory.GetFiles(Host.ResolvePath(@"..\ViewModels\"));
	if(viewModels != null && viewModels.Length > 0)				 
	foreach(var model in viewModels)
	{
		var modelFileName = System.IO.Path.GetFileName(model);
		var modelClassName =  System.IO.Path.GetFileName(model).Split('.')[0];
		if(modelFileName.EndsWith("ViewModel.cs") == false) continue;
		#>
   public partial class BehaviorBase : IExecutableBehavior<<#= modelClassName #>>
   {
		public virtual void Execute(BehaviorEvent<<#= modelClassName #>> args) {}
   }
<#}#>
} 


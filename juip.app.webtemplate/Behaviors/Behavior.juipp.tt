<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#= "using juipp.Events.Arguments;" #>
<#= "using juipp.Events.Handlers;" #>
<#= "using juipp.Behaviors;" #>
<#= "using juipp.Controllers;" #>
<#= "using TargetName@juip.ViewModels;" #>

namespace <#= "TargetName@juip.Behaviors" #> 
{
    public static class BehaviorReference 
    {
             <#
                var behaviors = System.IO.Directory.GetFiles(Host.ResolvePath(@"..\Behaviors\"));
                foreach(var behavior in behaviors)
                {
                    var fileName = System.IO.Path.GetFileName(behavior);
                    var className =  fileName.Split('.')[0];
                    if(fileName.EndsWith("Behavior.cs") == false) continue;
             #>public static string <#= className #> = "TargetName@juip.Behaviors.<#= className #>";
             <#}#>
    }
	 <#
    foreach(var b in behaviors)
    {
        var fileName = System.IO.Path.GetFileName(b);
        var className =  fileName.Split('.')[0];
        if(fileName.EndsWith("Behavior.cs") == false) continue;
	#>public partial class <#= className #> : BehaviorBase{}
    <#}#>



	<# var viewModels = System.IO.Directory.GetFiles(Host.ResolvePath(@"..\ViewModels\"));  #>
	        
	public partial class BehaviorBase 
	{
		public IApplicationContext ActionContext { get; set; }
	}

	<# 
					 
	foreach(var model in viewModels)
	{
		var modelFileName = System.IO.Path.GetFileName(model);
		var modelClassName =  System.IO.Path.GetFileName(model).Split('.')[0];
		if(modelFileName.EndsWith("ViewModel.cs") == false) continue;
		#>
   public partial class BehaviorBase : IBehavior<<#= modelClassName #>>
   {
		public virtual void Execute(juipp.Events.Arguments.ActionPerformedEventArgs<<#= modelClassName #>> args) {}
   }
<#}#>
          
} 

